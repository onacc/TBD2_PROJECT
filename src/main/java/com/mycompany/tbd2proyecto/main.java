/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tbd2proyecto;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.result.UpdateResult;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
/**
 *
 * @author gcano
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        conectar = new Conexion("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        conectar.conectar();
        loadFarmaciasFromDB();
        loadLaboratoriosFromDB();
        loadClientesFromDB();
        loadPropietariosFromDB();
        loadFarmaceuticosFromDB();
        initComponents();
        setLocationRelativeTo(this);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_CrearCliente = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_Nombre = new javax.swing.JTextField();
        jTextField_ID = new javax.swing.JTextField();
        jButton_Crear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDialog_CrearFarmacia = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_NombreF = new javax.swing.JTextField();
        jTextField_IDF = new javax.swing.JTextField();
        jButton_CrearF = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField_DirF1 = new javax.swing.JTextField();
        jDialog_CrearLaboratorio = new javax.swing.JDialog();
        jTextField_DirL = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField_NombreL = new javax.swing.JTextField();
        jTextField_IDL = new javax.swing.JTextField();
        jButton_CrearF1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField_ContactoL = new javax.swing.JTextField();
        jDialog_LogInCliente = new javax.swing.JDialog();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_NombreLogInC = new javax.swing.JTextField();
        jTextField_IDLogInC = new javax.swing.JTextField();
        jButton_CrearF2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jDialog_LogInFarmacia = new javax.swing.JDialog();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField_NombreLogInF = new javax.swing.JTextField();
        jTextField_IDLogInF = new javax.swing.JTextField();
        jButton_CrearF3 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jDialog_LogInLaboratorio = new javax.swing.JDialog();
        jTextField_IDLogInL = new javax.swing.JTextField();
        jButton_CrearF4 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField_NombreLogInL = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jDialog_ComprarCliente = new javax.swing.JDialog();
        jButton4 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jDialog_Farmacia = new javax.swing.JDialog();
        jButton11 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        jDialog_Laboratorio = new javax.swing.JDialog();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTextField_NombreP = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextField_IDP = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField_UnidadesP = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextField_CostoP = new javax.swing.JTextField();
        jTextField_FamiliaP = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jDialog_Master = new javax.swing.JDialog();
        jButton18 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabelMarca = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTextField_idborrar = new javax.swing.JTextField();
        jButton_idborrar = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jTextFieldidmodi = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelmodnom = new javax.swing.JLabel();
        jTextFieldmodnom = new javax.swing.JTextField();
        jLabelmodid = new javax.swing.JLabel();
        jTextFieldmodid = new javax.swing.JTextField();
        jbuttonmodi = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        jTextFielddireccion = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jTextFieldContacto = new javax.swing.JTextField();
        jPanelbotones = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        JTmaster = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton_Cliente = new javax.swing.JButton();
        jButton_Farmacia = new javax.swing.JButton();
        jButton_Laboratorio = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Ingrese su Nombre");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Ingrese su ID");

        jTextField_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDActionPerformed(evt);
            }
        });

        jButton_Crear.setText("Crear");
        jButton_Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel4.setText("Crear Cliente");

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_CrearClienteLayout = new javax.swing.GroupLayout(jDialog_CrearCliente.getContentPane());
        jDialog_CrearCliente.getContentPane().setLayout(jDialog_CrearClienteLayout);
        jDialog_CrearClienteLayout.setHorizontalGroup(
            jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_CrearClienteLayout.createSequentialGroup()
                .addGroup(jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_CrearClienteLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                            .addComponent(jTextField_ID)))
                    .addGroup(jDialog_CrearClienteLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jButton_Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearClienteLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(51, 51, 51)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jDialog_CrearClienteLayout.setVerticalGroup(
            jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_CrearClienteLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jDialog_CrearClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton_Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel6.setText("Crear Farmacia");

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Ingrese el nombre de la Farmacia");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Ingrese el ID de la Farmacia");

        jTextField_IDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDFActionPerformed(evt);
            }
        });

        jButton_CrearF.setText("Crear");
        jButton_CrearF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_CrearFMouseClicked(evt);
            }
        });
        jButton_CrearF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearFActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Ingrese la direccion de la Farmacia");

        jTextField_DirF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_DirF1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_CrearFarmaciaLayout = new javax.swing.GroupLayout(jDialog_CrearFarmacia.getContentPane());
        jDialog_CrearFarmacia.getContentPane().setLayout(jDialog_CrearFarmaciaLayout);
        jDialog_CrearFarmaciaLayout.setHorizontalGroup(
            jDialog_CrearFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearFarmaciaLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(jDialog_CrearFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_CrearFarmaciaLayout.createSequentialGroup()
                        .addGroup(jDialog_CrearFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_NombreF)
                            .addComponent(jTextField_IDF)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_DirF1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearFarmaciaLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jDialog_CrearFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearFarmaciaLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(51, 51, 51)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearFarmaciaLayout.createSequentialGroup()
                                .addComponent(jButton_CrearF, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(147, 147, 147)))))
                .addGap(34, 34, 34))
        );
        jDialog_CrearFarmaciaLayout.setVerticalGroup(
            jDialog_CrearFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_CrearFarmaciaLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jDialog_CrearFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_NombreF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_IDF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_DirF1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_CrearF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTextField_DirL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_DirLActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel10.setText("Crear Laboratorio");

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setText("X");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Ingrese el nombre del Laboratorio");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Ingrese el ID del Laboratorio");

        jTextField_IDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDLActionPerformed(evt);
            }
        });

        jButton_CrearF1.setText("Crear");
        jButton_CrearF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearF1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Ingrese la direccion del Laboratorio");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Ingrese el contacto del Laboratorio");

        jTextField_ContactoL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ContactoLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_CrearLaboratorioLayout = new javax.swing.GroupLayout(jDialog_CrearLaboratorio.getContentPane());
        jDialog_CrearLaboratorio.getContentPane().setLayout(jDialog_CrearLaboratorioLayout);
        jDialog_CrearLaboratorioLayout.setHorizontalGroup(
            jDialog_CrearLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearLaboratorioLayout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(jDialog_CrearLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_CrearLaboratorioLayout.createSequentialGroup()
                        .addGroup(jDialog_CrearLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_NombreL)
                            .addComponent(jTextField_IDL)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_DirL)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_ContactoL, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearLaboratorioLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jDialog_CrearLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearLaboratorioLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(51, 51, 51)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_CrearLaboratorioLayout.createSequentialGroup()
                                .addComponent(jButton_CrearF1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(147, 147, 147)))))
                .addGap(31, 31, 31))
        );
        jDialog_CrearLaboratorioLayout.setVerticalGroup(
            jDialog_CrearLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_CrearLaboratorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog_CrearLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_NombreL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_IDL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_ContactoL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_DirL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_CrearF1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel17.setText("Log In Cliente");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Ingrese su Nombre");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setText("Ingrese su ID");

        jTextField_IDLogInC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDLogInCActionPerformed(evt);
            }
        });

        jButton_CrearF2.setText("Ingresar");
        jButton_CrearF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearF2ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 51, 51));
        jButton5.setText("X");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_LogInClienteLayout = new javax.swing.GroupLayout(jDialog_LogInCliente.getContentPane());
        jDialog_LogInCliente.getContentPane().setLayout(jDialog_LogInClienteLayout);
        jDialog_LogInClienteLayout.setHorizontalGroup(
            jDialog_LogInClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LogInClienteLayout.createSequentialGroup()
                .addContainerGap(194, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(90, 90, 90)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jDialog_LogInClienteLayout.createSequentialGroup()
                .addGroup(jDialog_LogInClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_LogInClienteLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jDialog_LogInClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_NombreLogInC, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                            .addComponent(jTextField_IDLogInC)))
                    .addGroup(jDialog_LogInClienteLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jButton_CrearF2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_LogInClienteLayout.setVerticalGroup(
            jDialog_LogInClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_LogInClienteLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jDialog_LogInClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_LogInClienteLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_NombreLogInC, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_IDLogInC, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton_CrearF2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("Ingrese el Nombre de la Farmacia");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel21.setText("Ingrese el ID de la Farmacia");

        jTextField_IDLogInF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDLogInFActionPerformed(evt);
            }
        });

        jButton_CrearF3.setText("Ingresar");
        jButton_CrearF3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearF3ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel22.setText("Log In Farmacia");

        jButton6.setBackground(new java.awt.Color(255, 51, 51));
        jButton6.setText("X");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_LogInFarmaciaLayout = new javax.swing.GroupLayout(jDialog_LogInFarmacia.getContentPane());
        jDialog_LogInFarmacia.getContentPane().setLayout(jDialog_LogInFarmaciaLayout);
        jDialog_LogInFarmaciaLayout.setHorizontalGroup(
            jDialog_LogInFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LogInFarmaciaLayout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(69, 69, 69)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(jDialog_LogInFarmaciaLayout.createSequentialGroup()
                .addGroup(jDialog_LogInFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_LogInFarmaciaLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jDialog_LogInFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_NombreLogInF, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                            .addComponent(jTextField_IDLogInF)))
                    .addGroup(jDialog_LogInFarmaciaLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jButton_CrearF3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog_LogInFarmaciaLayout.setVerticalGroup(
            jDialog_LogInFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_LogInFarmaciaLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jDialog_LogInFarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_NombreLogInF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_IDLogInF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jButton_CrearF3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTextField_IDLogInL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_IDLogInLActionPerformed(evt);
            }
        });

        jButton_CrearF4.setText("Ingresar");
        jButton_CrearF4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearF4ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel23.setText("Log In Laboratorio");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel24.setText("Ingrese el Nombre del Laboratorio");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel25.setText("Ingrese el ID del Laboratorio");

        jButton7.setBackground(new java.awt.Color(255, 51, 51));
        jButton7.setText("X");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_LogInLaboratorioLayout = new javax.swing.GroupLayout(jDialog_LogInLaboratorio.getContentPane());
        jDialog_LogInLaboratorio.getContentPane().setLayout(jDialog_LogInLaboratorioLayout);
        jDialog_LogInLaboratorioLayout.setHorizontalGroup(
            jDialog_LogInLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_LogInLaboratorioLayout.createSequentialGroup()
                .addGroup(jDialog_LogInLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_LogInLaboratorioLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jDialog_LogInLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_NombreLogInL, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                            .addComponent(jTextField_IDLogInL)))
                    .addGroup(jDialog_LogInLaboratorioLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jButton_CrearF4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LogInLaboratorioLayout.createSequentialGroup()
                .addGap(0, 159, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jDialog_LogInLaboratorioLayout.setVerticalGroup(
            jDialog_LogInLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_LogInLaboratorioLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jDialog_LogInLaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_NombreLogInL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_IDLogInL, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton_CrearF4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jButton4.setText("Comprar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel26.setText("Compra de Clientes");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel27.setText("Elije una Farmacia");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "ID", "Unidades", "Precio", "Fabricante", "Familia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        jButton8.setBackground(new java.awt.Color(255, 51, 51));
        jButton8.setText("X");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_ComprarClienteLayout = new javax.swing.GroupLayout(jDialog_ComprarCliente.getContentPane());
        jDialog_ComprarCliente.getContentPane().setLayout(jDialog_ComprarClienteLayout);
        jDialog_ComprarClienteLayout.setHorizontalGroup(
            jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_ComprarClienteLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_ComprarClienteLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog_ComprarClienteLayout.createSequentialGroup()
                        .addGroup(jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDialog_ComprarClienteLayout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        jDialog_ComprarClienteLayout.setVerticalGroup(
            jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_ComprarClienteLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialog_ComprarClienteLayout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)))
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog_ComprarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jButton11.setBackground(new java.awt.Color(255, 51, 51));
        jButton11.setText("X");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "ID", "Unidades", "Precio", "Fabricante", "Familia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
        }

        jButton12.setText("Comprar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel32.setText("Compra a Laboratorios");

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel35.setText("Elije una Laboratorio");

        javax.swing.GroupLayout jDialog_FarmaciaLayout = new javax.swing.GroupLayout(jDialog_Farmacia.getContentPane());
        jDialog_Farmacia.getContentPane().setLayout(jDialog_FarmaciaLayout);
        jDialog_FarmaciaLayout.setHorizontalGroup(
            jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_FarmaciaLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_FarmaciaLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog_FarmaciaLayout.createSequentialGroup()
                        .addGroup(jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDialog_FarmaciaLayout.createSequentialGroup()
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        jDialog_FarmaciaLayout.setVerticalGroup(
            jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_FarmaciaLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialog_FarmaciaLayout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)))
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog_FarmaciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jButton9.setBackground(new java.awt.Color(255, 51, 51));
        jButton9.setText("X");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Agregar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel28.setText("Agregar producto a Laboratorio");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel29.setText("Elije un laboratorio");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel30.setText("Ingrese el nombre del producto");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel31.setText("Ingrese el ID del producto");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel33.setText("Ingrese las unidades del producto");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel34.setText("Ingrese el costo del Producto");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel36.setText("Familia del Producto");

        javax.swing.GroupLayout jDialog_LaboratorioLayout = new javax.swing.GroupLayout(jDialog_Laboratorio.getContentPane());
        jDialog_Laboratorio.getContentPane().setLayout(jDialog_LaboratorioLayout);
        jDialog_LaboratorioLayout.setHorizontalGroup(
            jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_LaboratorioLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_LaboratorioLayout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_NombreP, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jDialog_LaboratorioLayout.createSequentialGroup()
                        .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog_LaboratorioLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                        .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_IDP, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_UnidadesP, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_CostoP, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_LaboratorioLayout.createSequentialGroup()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_FamiliaP, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jDialog_LaboratorioLayout.setVerticalGroup(
            jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_LaboratorioLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialog_LaboratorioLayout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)))
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_NombreP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_IDP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_UnidadesP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_CostoP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog_LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_FamiliaP, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jButton18.setBackground(new java.awt.Color(255, 51, 51));
        jButton18.setText("X");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel37.setText("Modificar y Eliminar");

        jLabel38.setText("Actual:");

        jLabelMarca.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelMarca.setForeground(new java.awt.Color(0, 204, 51));
        jLabelMarca.setText("Cliente");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel40.setText("Borrar");
        jLabel40.setAutoscrolls(true);

        jLabel41.setText("Ingrese ID a borrar:");

        jButton_idborrar.setText("BORRAR");
        jButton_idborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_idborrarActionPerformed(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel39.setText("Modificar");

        jLabel42.setText("Ingrese ID a modificar:");

        jButton19.setText("OK");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabelmodnom.setText("Nombre");

        jTextFieldmodnom.setActionCommand("<Not Set>");

        jLabelmodid.setText("ID");

        jbuttonmodi.setText("Modificar");
        jbuttonmodi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonmodiActionPerformed(evt);
            }
        });

        jLabel43.setText("Dirección");

        jLabel44.setText("Contacto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelmodnom, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelmodid, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldContacto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(jTextFielddireccion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldmodid, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldmodnom, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jbuttonmodi)
                        .addGap(14, 14, 14))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelmodnom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldmodnom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelmodid)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldmodid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFielddireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jTextFieldContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbuttonmodi)
                        .addGap(62, 62, 62))))
        );

        jButton16.setText("Farmaceutico");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Propietario");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton13.setText("Cliente");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Farmacia");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Laboratorio");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelbotonesLayout = new javax.swing.GroupLayout(jPanelbotones);
        jPanelbotones.setLayout(jPanelbotonesLayout);
        jPanelbotonesLayout.setHorizontalGroup(
            jPanelbotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelbotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelbotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelbotonesLayout.setVerticalGroup(
            jPanelbotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelbotonesLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jButton13)
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addGap(18, 18, 18)
                .addComponent(jButton15)
                .addGap(18, 18, 18)
                .addComponent(jButton16)
                .addGap(18, 18, 18)
                .addComponent(jButton17)
                .addContainerGap())
        );

        JTmaster.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(JTmaster);

        javax.swing.GroupLayout jDialog_MasterLayout = new javax.swing.GroupLayout(jDialog_Master.getContentPane());
        jDialog_Master.getContentPane().setLayout(jDialog_MasterLayout);
        jDialog_MasterLayout.setHorizontalGroup(
            jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_MasterLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDialog_MasterLayout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelbotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog_MasterLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton18))
                    .addGroup(jDialog_MasterLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_idborrar)
                        .addGap(130, 130, 130))
                    .addGroup(jDialog_MasterLayout.createSequentialGroup()
                        .addGroup(jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_idborrar, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 269, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_MasterLayout.createSequentialGroup()
                        .addGroup(jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jDialog_MasterLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldidmodi))
                        .addGap(18, 18, 18)
                        .addComponent(jButton19)))
                .addGap(26, 26, 26))
        );
        jDialog_MasterLayout.setVerticalGroup(
            jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog_MasterLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabelMarca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelbotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(jDialog_MasterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog_MasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldidmodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19))
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_idborrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_idborrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log in");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 36)); // NOI18N
        jLabel1.setText("Escoja como quiere Ingresar");

        jButton_Cliente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton_Cliente.setText("Cliente");
        jButton_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClienteActionPerformed(evt);
            }
        });

        jButton_Farmacia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton_Farmacia.setText("Farmacia");
        jButton_Farmacia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FarmaciaActionPerformed(evt);
            }
        });

        jButton_Laboratorio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton_Laboratorio.setText("Laboratorio");
        jButton_Laboratorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LaboratorioActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setText("Crear Cuenta Farmacia");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(255, 51, 51));
        jLabel14.setText("Crear Cuenta Cliente");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 51, 51));
        jLabel15.setText("Crear Cuenta Laboratorio");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jButton_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel14)
                                .addGap(74, 74, 74)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_Farmacia, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(jButton_Laboratorio, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Farmacia, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Laboratorio, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        conectar.disconnect();
    }//GEN-LAST:event_formWindowClosed

    private void jButton_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClienteActionPerformed
        
        
        
        
        this.setVisible(false);
        jDialog_LogInCliente.setVisible(true);
        jDialog_LogInCliente.setModal(true);
        jDialog_LogInCliente.pack();
        jDialog_LogInCliente.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton_ClienteActionPerformed
public static void listarProductosEnTablaFarm(ArrayList<Producto> productos, JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre", "Unidades", "Precio", "Coste", "Fabricante", "Familia"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Producto producto : productos) {
            Object[] row = {
                producto.getId(), // ID
                producto.getNombre(), // Nombre
                producto.getUnidades(), // Unidades
                producto.getPrecio(), // Precio
                producto.getCoste(), // Coste
                producto.getFabricante(), // Fabricante
                producto.getFamilia() // Familia
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    private void jButton_FarmaciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FarmaciaActionPerformed
        this.setVisible(false);
        jDialog_LogInFarmacia.setVisible(true);
        jDialog_LogInFarmacia.setModal(true);
        jDialog_LogInFarmacia.pack();
        jDialog_LogInFarmacia.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton_FarmaciaActionPerformed

    private void jButton_LaboratorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LaboratorioActionPerformed
        this.setVisible(false);
        jDialog_LogInLaboratorio.setVisible(true);
        jDialog_LogInLaboratorio.setModal(true);
        jDialog_LogInLaboratorio.pack();
        jDialog_LogInLaboratorio.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton_LaboratorioActionPerformed

    private void jTextField_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDActionPerformed

    private void jButton_CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearActionPerformed
    String nombre = jTextField_Nombre.getText();
    int ID = Integer.parseInt(jTextField_ID.getText());
    Clientes.add(new Cliente(nombre, ID,null));
    escribirCliente(nombre,ID);
    JOptionPane.showMessageDialog(jDialog_CrearCliente, "Cliente "+ nombre+" creado exitosamente.");
    }//GEN-LAST:event_jButton_CrearActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
       this.setVisible(false);
       jDialog_CrearFarmacia.setVisible(true);
       jDialog_CrearFarmacia.setModal(true);
       jDialog_CrearFarmacia.pack();
       jDialog_CrearFarmacia.setLocationRelativeTo(this);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.setVisible(true);
       jDialog_CrearCliente.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.setVisible(true);
       jDialog_CrearFarmacia.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField_IDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDFActionPerformed

    private void jButton_CrearFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearFActionPerformed
        String nombre = jTextField_NombreF.getText(), dir= jTextField_DirF1.getText();
        int ID = Integer.parseInt(jTextField_IDF.getText());
        //agregar propietarios y farmacuitcos
        ArrayList<Integer> props = new ArrayList();
        ArrayList<Integer> farms = new ArrayList();
         int response;
        //propietarios
        do {
            String nombreprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese nombre de propietario");
            String IDprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese ID de propietario");
            props.add(Integer.parseInt(IDprop));
            
            pro.add(new Propietario(Integer.parseInt(IDprop),nombreprop));
            escribirPropietario(nombreprop,Integer.parseInt(IDprop));
            //agregar propietario
            
            response = JOptionPane.showConfirmDialog(jDialog_CrearFarmacia, "Desea agrear a otro propietario?", "Propietarios", JOptionPane.YES_NO_OPTION);
            
        } while (response == JOptionPane.YES_OPTION);
        //farmaceuticos
        do {
            String nombreprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese nombre de Farmaceutico");
            String IDprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese ID de Farmaceutico");
            farms.add(Integer.parseInt(IDprop));
            far.add(new Farmaceutico(Integer.parseInt(IDprop),nombreprop));
            escribirFarmaceutico(nombreprop,Integer.parseInt(IDprop));
            response = JOptionPane.showConfirmDialog(jDialog_CrearFarmacia, "Desea agrear a otro farmaceutico?", "Farmaceutico", JOptionPane.YES_NO_OPTION);
            
        } while (response == JOptionPane.YES_OPTION);
        escribirFarmacias(nombre, ID, dir,farms, props);
        //Farmacias.add(e)
        
        
       
    }//GEN-LAST:event_jButton_CrearFActionPerformed

    private void jTextField_DirF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DirF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_DirF1ActionPerformed

    private void jTextField_DirLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_DirLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_DirLActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(true);
        jDialog_CrearLaboratorio.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField_IDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDLActionPerformed

    private void jButton_CrearF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearF1ActionPerformed
        String nombre = jTextField_NombreL.getText(), dir= jTextField_IDL.getText(), contacto=jTextField_ContactoL.getText();
        int ID = Integer.parseInt(jTextField_IDL.getText());
        Laboratorios.add(new Laboratorio(ID, dir, contacto, nombre));
        escrbirLaboratorio(nombre, ID,dir, contacto);
        JOptionPane.showMessageDialog(jDialog_CrearLaboratorio, "Se ha creado la cuenta del Laboratorio Correctamente");
    }//GEN-LAST:event_jButton_CrearF1ActionPerformed

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        this.setVisible(false);
        jDialog_CrearCliente.setVisible(true);
       jDialog_CrearCliente.setModal(true);
       jDialog_CrearCliente.pack();
       jDialog_CrearCliente.setLocationRelativeTo(this);
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        this.setVisible(false);
        jDialog_CrearLaboratorio.setVisible(true);
       jDialog_CrearLaboratorio.setModal(true);
       jDialog_CrearLaboratorio.pack();
       jDialog_CrearLaboratorio.setLocationRelativeTo(this);
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jTextField_ContactoLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ContactoLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ContactoLActionPerformed

    private void jTextField_IDLogInCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDLogInCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDLogInCActionPerformed

    private void jButton_CrearF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearF2ActionPerformed
        int cont =0;
        if(jTextField_NombreLogInC.getText().equals("master")&& jTextField_IDLogInC.getText().endsWith("777")){
            jDialog_LogInCliente.setVisible(false);
            jDialog_Master.pack();
            jDialog_Master.setLocationRelativeTo(this);
            jDialog_Master.setVisible(true);
            jPanel1.setVisible(false);
            
        }else{
            String nombre = jTextField_NombreLogInC.getText();
            int ID = Integer.parseInt( jTextField_IDLogInC.getText());
            for (Cliente Cliente1 : Clientes) {
                if(Cliente1.getNombre().equals(nombre)&& Cliente1.getId()==ID ){
                    jDialog_LogInCliente.setVisible(false);
                    jDialog_ComprarCliente.setVisible(true);
                    jDialog_ComprarCliente.setModal(true);
                    jDialog_ComprarCliente.pack();
                    jDialog_ComprarCliente.setLocationRelativeTo(this);
                    for (Farmacia farmacia : Farmacias) {
                        jComboBox1.addItem(farmacia.getNombre()); // Assuming getNombre() returns the name
                    }
                    break;
                }
                cont++;    
                
            }
        }
        if(cont==Clientes.size()){
            JOptionPane.showMessageDialog(jDialog_LogInCliente, "Cliente no registrado.");
        }
    }//GEN-LAST:event_jButton_CrearF2ActionPerformed

    private void jTextField_IDLogInFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDLogInFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDLogInFActionPerformed

    private void jButton_CrearF3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearF3ActionPerformed
        int cont = 0;
        //Farmacias.add(0,new Farmacia("admin",1212,"admin"));
        for (Farmacia Cliente1 :Farmacias) {
            System.out.println(Cliente1.getNombre()+Cliente1.getId());
        }
        String nombre = jTextField_NombreLogInF.getText();
        int ID = Integer.parseInt( jTextField_IDLogInF.getText());
        for (Farmacia f : Farmacias) {
            if(f.getNombre().equals(nombre)&& f.getId()==ID ){
                jDialog_LogInFarmacia.setVisible(false);
                jDialog_Farmacia.setVisible(true);
                jDialog_Farmacia.setLocationRelativeTo(this);
                jDialog_Farmacia.pack();
                jComboBox3.removeAll();
                for (Laboratorio farmacia : Laboratorios) {
                   jComboBox3.addItem(farmacia.getNombre()); // Assuming getNombre() returns the name
               }      
                
                break;
                
            }
            cont++;
        }
        if(cont == Farmacias.size()){
            JOptionPane.showMessageDialog(jDialog_LogInFarmacia, "No esta la farmacia.");
        }
        
                
        
    }//GEN-LAST:event_jButton_CrearF3ActionPerformed

    private void jTextField_IDLogInLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_IDLogInLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_IDLogInLActionPerformed

    private void jButton_CrearF4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearF4ActionPerformed
       int cont=0;
        String nombre = jTextField_NombreLogInL.getText();
        int ID = Integer.parseInt( jTextField_IDLogInL.getText());
        for (Laboratorio l : Laboratorios) {
            if(l.getNombre().equals(nombre)&& l.getId()==ID ){
                jDialog_LogInLaboratorio.setVisible(false);
                jDialog_Laboratorio.setVisible(true);
                jDialog_Laboratorio.setModal(true);
                jDialog_Laboratorio.pack();
                jDialog_Laboratorio.setLocationRelativeTo(this);
                jComboBox2.removeAll();
                for (Laboratorio farmacia : Laboratorios) {
                   jComboBox2.addItem(farmacia.getNombre()); // Assuming getNombre() returns the name
               }
                break;
            }
            cont++;
        }
         
          if(cont==Laboratorios.size()){
              JOptionPane.showMessageDialog(jDialog_LogInLaboratorio, "No esta el laboratorio.");
          }
           
    }//GEN-LAST:event_jButton_CrearF4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        /*String nombre= (String)jComboBox1.getSelectedItem();
        Farmacia Far=null;
        DefaultTableModel model = new DefaultTableModel();
        for (Farmacia F : Farmacias) {
            if(F.getNombre().equals(nombre)){
                Far= F;
            }
        }
        for(Producto P :Far.getInventario()){
            Object[] temp = new Object[6];
            temp[0] = P.getNombre();
            temp[1] = P.getId();
            temp[2]=P.getUnidades();
            temp[3]=P.getPrecio();
            temp[4]= P.getFabricante();
            temp[5]=P.getFamilia();
            model.addRow(temp);
        }
        jTable1.setModel(model);*/
        //for (Farmacia farmacia : Farmacias) {
         //   jComboBox1.addItem(farmacia.getNombre()); // Assuming getNombre() returns the name
        //}
        
        int selected = jComboBox1.getSelectedIndex();
        listarProductosEnTablaFarm(Farmacias.get(selected).getInventario(), jTable1);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jDialog_LogInCliente.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialog_LogInFarmacia.setVisible(false);
        this.setVisible(true);    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jDialog_LogInLaboratorio.setVisible(false);
        this.setVisible(true);
        
    }//GEN-LAST:event_jButton7ActionPerformed
   public void addProductoToFarmacia(int farmaciaId, int prodId, int unidades, double precio, double coste, String nombreProd, String fabricante, String familia) {
       
       MongoClient mongoClient = null;
        try {
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            MongoDatabase db = mongoClient.getDatabase("Farmacia");
            MongoCollection<Document> collection = db.getCollection("Farmacia");

            // Create the Producto Document
            Document productoDoc = new Document("id", prodId)
                    .append("unidades", unidades)
                    .append("precio", precio)
                    .append("coste", coste)
                    .append("nombre", nombreProd)
                    .append("fabricante", fabricante)
                    .append("familia", familia);

            // Update the Farmacia document to add the new Producto
            Document query = new Document("id", farmaciaId);
            Document update = new Document("$push", new Document("productos", productoDoc));

            collection.updateOne(query, update);
            System.out.println("Producto added to Farmacia with ID: " + farmaciaId);

        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
    }
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        //laba
             
    }//GEN-LAST:event_jComboBox2ActionPerformed
 public void addProductoToLab(int labId, int prodId, int unidades, double precio, double coste, String nombreProd, String fabricante, String familia) {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Laboratorio"); // Use the correct collection name

        // Create the Producto Document
        Document productoDoc = new Document("id", prodId)
                .append("unidades", unidades)
                .append("precio", precio)
                .append("coste", coste)
                .append("nombre", nombreProd)
                .append("fabricante", fabricante)
                .append("familia", familia);

        // Update the Laboratorio document to add the new Producto
        Document query = new Document("id", labId);
        Document update = new Document("$push", new Document("productos", productoDoc));

        UpdateResult result = collection.updateOne(query, update);
        if (result.getModifiedCount() == 0) {
            System.out.println("No document found with the specified labId or no changes made.");
        }

    } catch (Exception e) {
        e.printStackTrace(); // Print the stack trace for better debugging
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int selected = jComboBox2.getSelectedIndex();
        int idlab = Laboratorios.get(selected).getId();
        String nombrepro = jTextField_NombreP.getText(),familia = jTextField_FamiliaP.getText();
        int prodId = Integer.parseInt(jTextField_IDP.getText()),unidades =  Integer.parseInt(jTextField_UnidadesP.getText());
        double coste = Double.parseDouble(jTextField_CostoP.getText());
        double precio = coste + coste*0.15;
        addProductoToLab(idlab,  prodId, unidades, precio, coste, nombrepro, "El tigre", familia);
        JOptionPane.showMessageDialog(jDialog_Laboratorio, "Producto creado.");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jDialog_Laboratorio.setVisible(false);
        jDialog_LogInLaboratorio.setVisible(true);
        jDialog_LogInLaboratorio.setModal(true);
        jDialog_LogInLaboratorio.pack();
        jDialog_LogInLaboratorio.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int cant =  Integer.parseInt(JOptionPane.showInputDialog(jDialog_ComprarCliente, "Cuantos quiere comprar?"));
        int id = Integer.parseInt(jTextField_IDLogInC.getText());
        int selected = jComboBox1.getSelectedIndex();
        int storeid = Farmacias.get(selected).getId();
        int productId = Farmacias.get(selected).getInventario().get(jTable1.getSelectedRow()).getId();
        BuyClientesToFar(id,cant,storeid,productId);
    }//GEN-LAST:event_jButton4ActionPerformed
 public void BuyClientesToFar(int clientId, int amount, int storeId, int productId) {
    MongoClient mongoClient = null;

    try {
        // Connect to MongoDB
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");

        MongoCollection<Document> farmaciaCollection = db.getCollection("Farmacia");
        MongoCollection<Document> clienteCollection = db.getCollection("Cliente");

        // Retrieve the product from the farmacia (store) by ID
        Document storeDoc = farmaciaCollection.find(new Document("id", storeId)).first();
        if (storeDoc == null) {
            System.out.println("Store not found");
            return;
        }

        List<Document> storeInventory = (List<Document>) storeDoc.get("productos");
        Document productDoc = storeInventory.stream()
            .filter(prod -> prod.getInteger("id") == productId)
            .findFirst()
            .orElse(null);

        if (productDoc == null) {
            System.out.println("Product not found in store");
            return;
        }

        int currentStoreUnits = productDoc.getInteger("unidades");
        if (currentStoreUnits < amount) {
            System.out.println("Insufficient stock in store");
            JOptionPane.showMessageDialog(jDialog_ComprarCliente, "No hay stock.");
            return;
        }

        // Retrieve the client by ID
        Document clientDoc = clienteCollection.find(new Document("id", clientId)).first();
        if (clientDoc == null) {
            System.out.println("Client not found");
            return;
        }

        // Get the client's inventory; initialize if it's null or empty
        List<Document> clientInventory = (List<Document>) clientDoc.get("inventario");
        if (clientInventory == null) {
            clientInventory = new ArrayList<>(); // Initialize to empty list if null
        }

        // Check if the client already has this product in their inventory
        Optional<Document> clientProductDocOpt = clientInventory.stream()
            .filter(prod -> prod.getInteger("id") == productId)
            .findFirst();

        if (clientProductDocOpt.isEmpty()) {
            // Product does not exist in client's inventory, so add it
            Document newClientProductDoc = new Document("id", productId)
                .append("unidades", amount)
                .append("precio", productDoc.getDouble("precio"))
                .append("coste", productDoc.getDouble("coste"))
                .append("nombre", productDoc.getString("nombre"))
                .append("fabricante", productDoc.getString("fabricante"))
                .append("familia", productDoc.getString("familia"));
            clientInventory.add(newClientProductDoc);
        } else {
            // Product exists in client's inventory, so update the quantity
            Document clientProductDoc = clientProductDocOpt.get();
            int currentClientUnits = clientProductDoc.getInteger("unidades");
            clientProductDoc.put("unidades", currentClientUnits + amount);
        }

        // Update the client's inventory in the database
        clienteCollection.updateOne(new Document("id", clientId),
            new Document("$set", new Document("inventario", clientInventory)));

        // Subtract the amount from the store's product units and update the store inventory
        productDoc.put("unidades", currentStoreUnits - amount);
        farmaciaCollection.updateOne(new Document("id", storeId),
            new Document("$set", new Document("productos", storeInventory)));

        System.out.println("Transaction completed successfully!");
        JOptionPane.showMessageDialog(jDialog_ComprarCliente, "Transaccion completa");
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}






    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        int cant =  Integer.parseInt(JOptionPane.showInputDialog(jDialog_Farmacia, "Cuantos quiere comprar?"));
        int id = Integer.parseInt(jTextField_IDLogInF.getText());
        int selected = jComboBox3.getSelectedIndex();
        int storeid = Laboratorios.get(selected).getId();
        int productId = Laboratorios.get(selected).getProductos().get(jTable2.getSelectedRow()).getId();
        BuyFarmaciaFromLab(id,cant,storeid,productId);
        
    }//GEN-LAST:event_jButton12ActionPerformed

   public void BuyFarmaciaFromLab(int farmaciaId, int amount, int labId, int productId) {
    MongoClient mongoClient = null;

    try {
        // Connect to MongoDB
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");

        MongoCollection<Document> laboratorioCollection = db.getCollection("Laboratorio");
        MongoCollection<Document> farmaciaCollection = db.getCollection("Farmacia");

        // Retrieve the product from the laboratorio by ID
        Document labDoc = laboratorioCollection.find(new Document("id", labId)).first();
        if (labDoc == null) {
            System.out.println("Laboratorio not found");
            return;
        }

        List<Document> labInventory = (List<Document>) labDoc.get("productos");
        if (labInventory == null) {
            System.out.println("No products in laboratorio inventory");
            return;
        }

        Document productDoc = labInventory.stream()
            .filter(prod -> prod.getInteger("id") != null && prod.getInteger("id") == productId)
            .findFirst()
            .orElse(null);

        if (productDoc == null) {
            System.out.println("Product not found in laboratorio");
            return;
        }

        Integer currentLabUnits = productDoc.getInteger("unidades");
        if (currentLabUnits == null || currentLabUnits < amount) {
            System.out.println("Insufficient stock in laboratorio or units is null");
             JOptionPane.showMessageDialog(jDialog_Farmacia, "No hay suficiente Stock.");
            return;
        }

        // Retrieve the farmacia by ID
        Document farmaciaDoc = farmaciaCollection.find(new Document("id", farmaciaId)).first();
        if (farmaciaDoc == null) {
            System.out.println("Farmacia not found");
            return;
        }

        // Check if the farmacia already has this product in its inventory
        List<Document> farmaciaInventory = (List<Document>) farmaciaDoc.get("productos");
        if (farmaciaInventory == null) {
            farmaciaInventory = new ArrayList<>();  // Initialize if empty
        }

        Document farmaciaProductDoc = farmaciaInventory.stream()
            .filter(prod -> prod.getInteger("id") != null && prod.getInteger("id") == productId)
            .findFirst()
            .orElse(null);

        if (farmaciaProductDoc == null) {
            // Product does not exist in farmacia's inventory, so add it
            Document newFarmaciaProductDoc = new Document("id", productId)
                .append("unidades", amount)
                .append("precio", productDoc.getDouble("precio") != null ? productDoc.getDouble("precio") : 0.0)
                .append("coste", productDoc.getDouble("coste") != null ? productDoc.getDouble("coste") : 0.0)
                .append("nombre", productDoc.getString("nombre") != null ? productDoc.getString("nombre") : "Unknown")
                .append("fabricante", productDoc.getString("fabricante") != null ? productDoc.getString("fabricante") : "Unknown")
                .append("familia", productDoc.getString("familia") != null ? productDoc.getString("familia") : "Unknown");
            farmaciaInventory.add(newFarmaciaProductDoc);
        } else {
            // Product exists in farmacia's inventory, so update the quantity
            Integer currentFarmaciaUnits = farmaciaProductDoc.getInteger("unidades");
            if (currentFarmaciaUnits == null) currentFarmaciaUnits = 0;
            farmaciaProductDoc.put("unidades", currentFarmaciaUnits + amount);
        }

        // Update the farmacia's inventory in the database
        farmaciaCollection.updateOne(new Document("id", farmaciaId),
            new Document("$set", new Document("productos", farmaciaInventory)));

        // Subtract the amount from the laboratorio's product units and update the lab inventory
        productDoc.put("unidades", currentLabUnits - amount);
        laboratorioCollection.updateOne(new Document("id", labId),
            new Document("$set", new Document("productos", labInventory)));

        System.out.println("Transaction completed successfully!");
        JOptionPane.showMessageDialog(jDialog_Farmacia, "Transaccion completa");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }


}

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
       /* String nombre= (String)jComboBox3.getSelectedItem();
        Laboratorio Lab=null;
        DefaultTableModel model = new DefaultTableModel();
        for (Laboratorio L : Laboratorios) {
            if(L.getNombre().equals(nombre)){
                Lab= L;
            }
        }
        for(Producto P :Lab.getProductos()){
            Object[] temp = new Object[6];
            temp[0] = P.getNombre();
            temp[1] = P.getId();
            temp[2]=P.getUnidades();
            temp[3]=P.getPrecio();
            temp[4]= P.getFabricante();
            temp[5]=P.getFamilia();
            model.addRow(temp);
        }
        jTable2.setModel(model);*/
       int selected = jComboBox3.getSelectedIndex();
       listarProductosEnTablaLab(Laboratorios.get(selected).getProductos(),jTable2);
       
    }//GEN-LAST:event_jComboBox3ActionPerformed
    public void listarProductosEnTablaLab(ArrayList<Producto> productos, JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre", "Unidades", "Precio", "Coste", "Fabricante", "Familia"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Producto producto : productos) {
            Object[] row = {
                producto.getId(), // ID
                producto.getNombre(), // Nombre
                producto.getUnidades(), // Unidades
                producto.getPrecio(), // Precio
                producto.getCoste(), // Coste
                producto.getFabricante(), // Fabricante
                producto.getFamilia() // Familia
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    public void escribirFarmacias(String nombre, int ID, String dir,ArrayList<Integer> farm, ArrayList<Integer> prop){
        //agregar propietarios y farmacuitcos
        
        //Farmacias.add(new Farmacia(nombre, ID, dir, null, null, null));
        JOptionPane.showMessageDialog(null, "Se ha creado la cuenta de Farmacia Correctamente");
         try {
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection("Farmacia");
            System.out.println("Connected to MongoDB");

            
           
           
            Farmacias.add(new Farmacia(nombre, ID, dir, prop,farm));
          

          
            
                Document farmaciaDoc = new Document("id", ID)
                        .append("nombre", nombre)
                        .append("direccion", dir)
                        .append("Propietarios", prop)
                        .append("Farmaceuticos",farm)
                        .append("productos",new ArrayList<>());
                collection.insertOne(farmaciaDoc);  
            

            System.out.println("All Farmacias inserted successfully!");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
    }
    public  void readFarmacias() {
       

        try {
            
            mongoClient = MongoClients.create("linkconec");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection("farmacias");
            System.out.println("Connected to MongoDB");

            
            MongoCursor<Document> cursor = collection.find().iterator();

            while (cursor.hasNext()) {
                Document doc = cursor.next();

                
                String nombre = doc.getString("nombre");
                int id = doc.getInteger("id");
                String direccion = doc.getString("direccion");

               
                ArrayList<Integer> propietarios = (ArrayList<Integer>) doc.get("Propietarios");
                ArrayList<Integer> farmaceuticos = (ArrayList<Integer>) doc.get("Farmaceuticos");
                

             
                Farmacia farmacia = new Farmacia(nombre, id, direccion, propietarios, farmaceuticos);
                Farmacias.add(farmacia);  
            }

            cursor.close();
            System.out.println("All Farmacias read successfully!");

        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }

        
    
}
    public void escribirPropietario(String nombre, int ID){
        //Farmacias.add(new Farmacia(nombre, ID, dir, null, null, null));
        
         try {
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection("Propietario");
            System.out.println("Connected to MongoDB");

            // Create and populate an ArrayList of Farmacia objects
           
            //Farmacias.add(new Farmacia(1, "123 Main St", new ArrayList<>(List.of(101, 102)), new ArrayList<>(List.of(201, 202))));
            
            // Add more Farmacia objects as needed

            // Insert each Farmacia object as a document
            
                Document proDoc = new Document("id", ID)
                        .append("nombre", nombre);
                        
                collection.insertOne(proDoc);  
            

            System.out.println("All Propietarios inserted successfully!");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
    }
     public void escribirFarmaceutico(String nombre, int ID){
        //Farmacias.add(new Farmacia(nombre, ID, dir, null, null, null));
        
         try {
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection("Farmaceutico");
            System.out.println("Connected to MongoDB");

            
            
                Document pfroDoc = new Document("id", ID)
                        .append("nombre", nombre);
                        
                collection.insertOne(pfroDoc);  
            

            System.out.println("All farms inserted successfully!");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
    }
     public void escribirCliente(String nombre, int ID){
          try {
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection("Cliente");
            System.out.println("Connected to MongoDB");

            
            
                Document pfroDoc = new Document("id", ID)
                        .append("nombre", nombre)
                        .append("inventario", new ArrayList<>());
                        
                collection.insertOne(pfroDoc);  
            

            System.out.println("All Clientes inserted successfully!");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
     }
     public void escrbirLaboratorio(String nombre,int  ID,String dir,String contacto){
          try {
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection("Laboratorio");
            System.out.println("Connected to MongoDB");

            
            
                Document pfroDoc = new Document("id", ID)
                        .append("nombre", nombre)
                        .append("direccion", dir)
                        .append("contacto", contacto) .append("productos",new ArrayList<>());
                        
                collection.insertOne(pfroDoc);  
            

            System.out.println("All labs inserted successfully!");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
     }
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        jDialog_Farmacia.setVisible(false);
        jDialog_LogInFarmacia.setVisible(true);
        jDialog_LogInFarmacia.setModal(true);
        jDialog_LogInFarmacia.pack();
        jDialog_LogInFarmacia.setLocationRelativeTo(this);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton_CrearFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_CrearFMouseClicked
      
    }//GEN-LAST:event_jButton_CrearFMouseClicked

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        jPanelbotones.setVisible(true);
        jTextFieldmodid.setText("");
        jTextFielddireccion.setText("");
        jTextFieldmodnom.setText("");
        jButton_idborrar.setEnabled(true);
        jTextFieldidmodi.setEnabled(true);
        jTextFieldidmodi.setText("");
        jPanel1.setVisible(false);
        jDialog_Master.setVisible(false);
        jTextFielddireccion.setEnabled(false);
        jTextFieldContacto.setText("");
        jTextFieldContacto.setEnabled(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        jLabelMarca.setText("Cliente");
        listarClientesEnTabla(JTmaster);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jLabelMarca.setText("Farmacia");
        listarFarmaciasEnTabla( JTmaster);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        jLabelMarca.setText("Laboratorio");
        listarLaboratoriosEnTabla( JTmaster);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        jLabelMarca.setText("Farmaceutico");
        listarFarmaceuticosEnTabla( JTmaster);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        jLabelMarca.setText("Propietario");
        listarPropietariosEnTabla( JTmaster);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton_idborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_idborrarActionPerformed
        deleteMaster();
    }//GEN-LAST:event_jButton_idborrarActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        
        try{
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection(jLabelMarca.getText());
            System.out.println("Connected to MongoDB");
            int id=Integer.parseInt(jTextFieldidmodi.getText());
            Document filtro = new Document("id", id);
            long count = collection.countDocuments(filtro);
            if (count == 0) {
                JOptionPane.showMessageDialog(null,"No se encontró "+ jLabelMarca.getText()+" con el ID especificado.");
            } else {
                jPanelbotones.setVisible(false);
                jButton_idborrar.setEnabled(false);
                jPanel1.setVisible(true);
                jTextFieldidmodi.setEnabled(false);
                jTextFielddireccion.setEnabled(false);
                jTextFieldContacto.setEnabled(false);
                if(jLabelMarca.getText().equals("Farmacia") )
                    jTextFielddireccion.setEnabled(true);
                if( jLabelMarca.getText().equals("Laboratorio")){
                    jTextFieldContacto.setEnabled(true);
                    jTextFielddireccion.setEnabled(true);
                }
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jbuttonmodiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonmodiActionPerformed
        try{
            if(!(jTextFieldmodnom.getText().isBlank() && jTextFieldmodid.getText().isBlank())){
                if(jLabelMarca.getText().equals("Farmacia")){
                    ArrayList<Integer> props = new ArrayList();
                    ArrayList<Integer> farms = new ArrayList();
                     int response;
                    do {
                        String nombreprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese nombre de propietario");
                        String IDprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese ID de propietario");
                        props.add(Integer.parseInt(IDprop));
                        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
                        db = mongoClient.getDatabase("Farmacia");
                        collection = db.getCollection("Propietario");
                        Document proDoc = new Document("id", Integer.parseInt(IDprop)).append("nombre", nombreprop);
                        collection.insertOne(proDoc); 

                        response = JOptionPane.showConfirmDialog(jDialog_CrearFarmacia, "Desea agrear a otro propietario?", "Propietarios", JOptionPane.YES_NO_OPTION);

                    } while (response == JOptionPane.YES_OPTION);
                    //farmaceuticos
                    do {
                        String nombreprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese nombre de Farmaceutico");
                        String IDprop = JOptionPane.showInputDialog(jDialog_CrearFarmacia, "Ingrese ID de Farmaceutico");
                        farms.add(Integer.parseInt(IDprop));
                        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
                        db = mongoClient.getDatabase("Farmacia");
                        collection = db.getCollection("Farmaceutico");
                        Document pfroDoc = new Document("id", Integer.parseInt(IDprop)).append("nombre", nombreprop);
                        collection.insertOne(pfroDoc);  
                        response = JOptionPane.showConfirmDialog(jDialog_CrearFarmacia, "Desea agrear a otro farmaceutico?", "Farmaceutico", JOptionPane.YES_NO_OPTION);

                    } while (response == JOptionPane.YES_OPTION);
                    mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
                    db = mongoClient.getDatabase("Farmacia");
                    collection = db.getCollection(jLabelMarca.getText());
                    Document farmaciaDoc = new Document("id", Integer.parseInt(jTextFieldmodid.getText())).append("nombre", jTextFieldmodnom.getText()).append("direccion", jTextFielddireccion.getText()).append("Propietarios", props).append("Farmaceuticos",farms).append("productos",null);
                    collection.insertOne(farmaciaDoc);
                    int id=Integer.parseInt(jTextFieldidmodi.getText());
                    Document filtro = new Document("id", id);
                    collection.deleteOne(filtro);
                }else if(jLabelMarca.getText().equals("Laboratorio")){
                    mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
                    db = mongoClient.getDatabase("Farmacia");
                    collection = db.getCollection(jLabelMarca.getText());
                    Document pfroDoc = new Document("id", Integer.parseInt(jTextFieldmodid.getText())).append("nombre", jTextFieldmodnom.getText()).append("direccion", jTextFielddireccion.getText()).append("contacto", jTextFieldContacto.getText());
                        
                    collection.insertOne(pfroDoc);  
                    int id=Integer.parseInt(jTextFieldidmodi.getText());
                    Document filtro = new Document("id", id);
                    collection.deleteOne(filtro);
                }
                else{
                    mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
                    db = mongoClient.getDatabase("Farmacia");
                    collection = db.getCollection(jLabelMarca.getText());
                    Document pfroDoc = new Document("id", Integer.parseInt(jTextFieldmodid.getText())).append("nombre", jTextFieldmodnom.getText());
                    collection.insertOne(pfroDoc);  
                    int id=Integer.parseInt(jTextFieldidmodi.getText());
                    Document filtro = new Document("id", id);
                    collection.deleteOne(filtro);
                }
                jPanelbotones.setVisible(true);
                JOptionPane.showMessageDialog(null, "Se ha modificado "+ jLabelMarca.getText());
                jTextFielddireccion.setText("");
                jTextFieldmodid.setText("");
                jTextFieldmodnom.setText("");
                jButton_idborrar.setEnabled(true);
                jTextFieldidmodi.setEnabled(true);
                jTextFieldidmodi.setText("");
                jPanel1.setVisible(false);
                jTextFieldContacto.setText("");
                
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
       
    }//GEN-LAST:event_jbuttonmodiActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jTextField_NombreLogInC.setText("");
        jTextField_IDLogInC.setText("");
        jDialog_ComprarCliente.setVisible(false);
        jDialog_LogInCliente.setVisible(true);
        jDialog_LogInCliente.setModal(true);
        jDialog_LogInCliente.pack();
        jDialog_LogInCliente.setLocationRelativeTo(this);
        
    }//GEN-LAST:event_jButton8ActionPerformed
 
    public  void listarPropietariosEnTabla( JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Propietario propietario : pro) {
            Object[] row = {
                propietario.getId(), // ID
                propietario.getNombre() // Nombre
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    public void listarLaboratoriosEnTabla( JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre", "Dirección", "Contacto", "Número de Productos"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Laboratorio laboratorio : Laboratorios) {
            Object[] row = {
                laboratorio.getId(), // ID
                laboratorio.getNombre(), // Nombre
                laboratorio.getDireccion(), // Dirección
                laboratorio.getContact(), // Contacto
                laboratorio.getProductos().size() // Número de productos
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    public void listarFarmaceuticosEnTabla( JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Farmaceutico farmaceutico : far) {
            Object[] row = {
                farmaceutico.getId(), // ID
                farmaceutico.getNombre(), // Nombre
               
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    public  void listarClientesEnTabla(JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre", "Número de Productos en Inventario"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Cliente cliente : Clientes) {
            Object[] row = {
                cliente.getId(), // ID
                cliente.getNombre(), // Nombre
                cliente.getInventario().size() // Número de productos en inventario
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    public  void listarFarmaciasEnTabla( JTable table) {
        // Create column names based on attributes
        String[] columnNames = {"ID", "Nombre", "Dirección", "Número de Propietarios", "Número de Farmacéuticos", "Número de Productos en Inventario"};
        
        // Prepare data for the table
        ArrayList<Object[]> data = new ArrayList<>();
        for (Farmacia farmacia : Farmacias) {
            Object[] row = {
                farmacia.getId(), // ID
                farmacia.getNombre(), // Nombre
                farmacia.getDireccion(), // Dirección
                farmacia.getPropietarios().size(), // Número de propietarios
                farmacia.getFarmaceuticos().size(), // Número de farmacéuticos
                farmacia.getInventario().size() // Número de productos en inventario
            };
            data.add(row);
        }
        
        // Create a DefaultTableModel with the data
        DefaultTableModel model = new DefaultTableModel(data.toArray(new Object[0][]), columnNames);
        
        // Set the model to the JTable
        table.setModel(model);
    }
    public void escribirProducto(int id, int unidades, double precio, double coste, String nombre, String fabricante, String familia) {
    JOptionPane.showMessageDialog(null, "Se ha creado el Producto correctamente");
    MongoClient mongoClient = null;

    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("productos");
        System.out.println("Connected to MongoDB");

        // Add to the local array of productos if desired
        prod.add(new Producto(id, unidades, precio, coste, nombre, fabricante, familia));

        // Prepare and insert the document in MongoDB
        Document productoDoc = new Document("id", id)
                .append("unidades", unidades)
                .append("precio", precio)
                .append("coste", coste)
                .append("nombre", nombre)
                .append("fabricante", fabricante)
                .append("familia", familia);
        
        collection.insertOne(productoDoc);
        System.out.println("Producto inserted successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}


public void escribirPedido(int id, int idLab, int idFarmacia, String detalle) {
    
    MongoClient mongoClient = null;

    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("pedidos");
        System.out.println("Connected to MongoDB");

        // Add to the local array of pedidos if desired
        ped.add(new Pedido(id, idLab, idFarmacia, detalle));

        // Prepare and insert the document in MongoDB
        Document pedidoDoc = new Document("id", id)
                .append("id_lab", idLab)
                .append("id_farmacia", idFarmacia)
                .append("detalle", detalle);
        
        collection.insertOne(pedidoDoc);
        System.out.println("Pedido inserted successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}

public  void loadProductosFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("productos");

        prod.clear(); // Clear the list before loading new data

        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            System.out.println("Retrieved Document: " + doc.toJson());

            // Extract fields from the document
            int id = doc.getInteger("id", -1);
            int unidades = doc.getInteger("unidades", 0);
            double precio = doc.getDouble("precio");
            double coste = doc.getDouble("coste");
            String nombre = doc.getString("nombre");
            String fabricante = doc.getString("fabricante");
            String familia = doc.getString("familia");

            // Create a Producto object with the retrieved data
            Producto producto = new Producto(id, unidades, precio, coste, nombre, fabricante, familia);

            // Add the Producto object to the global ArrayList
            prod.add(producto);
        }

        cursor.close();
        System.out.println("All Productos loaded successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}


public  void loadPedidosFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Pedido");

        ped.clear(); // Clear the list before loading new data

        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            System.out.println("Retrieved Document: " + doc.toJson());

            // Extract fields from the document
            int id = doc.getInteger("id", -1);
            int idLab = doc.getInteger("id_lab", -1);
            int idFarmacia = doc.getInteger("id_farmacia", -1);
            String detalle = doc.getString("detalle");

            // Create a Pedido object with the retrieved data
            Pedido pedido = new Pedido(id, idLab, idFarmacia, detalle);

            // Add the Pedido object to the global ArrayList
            ped.add(pedido);
        }

        cursor.close();
        System.out.println("All Pedidos loaded successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}

    public  void loadFarmaceuticosFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Farmaceutico");

        far.clear(); // Clear the list before loading new data

        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            System.out.println("Retrieved Document: " + doc.toJson());

            // Extract fields from the document
            int id = doc.getInteger("id", -1); // Use -1 if id is missing
            String nombre = doc.getString("nombre");

            // Create a Propietario object with the retrieved data
            Farmaceutico propietario = new Farmaceutico(id, nombre);

            // Add the Propietario object to the global ArrayList
            far.add(propietario);
        }

        cursor.close();
        System.out.println("All Propietarios loaded successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}   

public  void loadPropietariosFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Propietario");

        pro.clear(); // Clear the list before loading new data

        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            System.out.println("Retrieved Document: " + doc.toJson());

            // Extract fields from the document
            int id = doc.getInteger("id", -1); // Use -1 if id is missing
            String nombre = doc.getString("nombre");

            // Create a Propietario object with the retrieved data
            Propietario propietario = new Propietario(id, nombre);

            // Add the Propietario object to the global ArrayList
            pro.add(propietario);
        }

        cursor.close();
        System.out.println("All Propietarios loaded successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}


public  void loadClientesFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Cliente");

        Clientes.clear(); // Clear the list before loading new data

        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            System.out.println("Retrieved Document: " + doc.toJson());

            // Extract fields from the document
            String nombre = doc.getString("nombre");
            int id = doc.getInteger("id", -1); // Use -1 if id is missing

            // Process inventario as an ArrayList of Producto
            ArrayList<Producto> inventario = new ArrayList<>();
            ArrayList<Document> inventarioDocs = (ArrayList<Document>) doc.get("inventario");
            if (inventarioDocs != null) {
                for (Document prodDoc : inventarioDocs) {
                    int prodId = prodDoc.getInteger("id");
                    int unidades = prodDoc.getInteger("unidades");
                    double precio = prodDoc.getDouble("precio");
                    double coste = prodDoc.getDouble("coste");
                    String nombreProd = prodDoc.getString("nombre");
                    String fabricante = prodDoc.getString("fabricante");
                    String familia = prodDoc.getString("familia");

                    Producto producto = new Producto(prodId, unidades, precio, coste, nombreProd, fabricante, familia);
                    inventario.add(producto);
                }
            }

            // Create a Cliente object with the retrieved data
            Cliente cliente = new Cliente(nombre, id, inventario);

            // Add the Cliente object to the global ArrayList
            Clientes.add(cliente);
        }

        cursor.close();
        System.out.println("All Clientes loaded successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}

    public void loadLaboratoriosFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Laboratorio");

        Laboratorios.clear(); // Clear the list before loading new data

        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();
            System.out.println("Retrieved Document: " + doc.toJson());

            // Extract fields from the document
            int id = doc.getInteger("id", -1); // Use -1 if id is missing
            String nombre = doc.getString("nombre");
            String direccion = doc.getString("direccion");
            String contacto = doc.getString("contacto");

            // Process productos as an ArrayList of Producto
            ArrayList<Producto> productos = new ArrayList<>();
            ArrayList<Document> productosDocs = (ArrayList<Document>) doc.get("productos");
            if (productosDocs != null) {
                for (Document prodDoc : productosDocs) {
                    int prodId = prodDoc.getInteger("id");
                    int unidades = prodDoc.getInteger("unidades");
                    double precio = prodDoc.getDouble("precio");
                    double coste = prodDoc.getDouble("coste");
                    String nombreProd = prodDoc.getString("nombre");
                    String fabricante = prodDoc.getString("fabricante");
                    String familia = prodDoc.getString("familia");

                    Producto producto = new Producto(prodId, unidades, precio, coste, nombreProd, fabricante, familia);
                    productos.add(producto);
                }
            }

            // Create a Laboratorio object with the retrieved data
            Laboratorio laboratorio = new Laboratorio(id, direccion, contacto, nombre, productos);

            // Add the Laboratorio object to the global ArrayList
            Laboratorios.add(laboratorio);
        }

        cursor.close();
        System.out.println("All Laboratorios loaded successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}
    public  void loadFarmaciasFromDB() {
    MongoClient mongoClient = null;
    try {
        mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
        MongoDatabase db = mongoClient.getDatabase("Farmacia");
        MongoCollection<Document> collection = db.getCollection("Farmacia");

        // Clear the Farmacias list before loading new data
        Farmacias.clear();

        // Retrieve all documents from the collection
        MongoCursor<Document> cursor = collection.find().iterator();
        while (cursor.hasNext()) {
            Document doc = cursor.next();

            // Extract fields from the document
            String nombre = doc.getString("nombre");
            int id = doc.getInteger("id");
            String direccion = doc.getString("direccion");
            ArrayList<Integer> propietarios = (ArrayList<Integer>) doc.get("Propietarios");
            ArrayList<Integer> farmaceuticos = (ArrayList<Integer>) doc.get("Farmaceuticos");

            // Process productos as an ArrayList of Producto
            ArrayList<Producto> productos = new ArrayList<>();
            ArrayList<Document> productosDocs = (ArrayList<Document>) doc.get("productos");

            if (productosDocs != null) {  // Only process if productos is not null
                for (Document prodDoc : productosDocs) {
                    int prodId = prodDoc.getInteger("id");
                    int unidades = prodDoc.getInteger("unidades");
                    double precio = prodDoc.getDouble("precio");
                    double coste = prodDoc.getDouble("coste");
                    String nombreProd = prodDoc.getString("nombre");
                    String fabricante = prodDoc.getString("fabricante");
                    String familia = prodDoc.getString("familia");

                    Producto producto = new Producto(prodId, unidades, precio, coste, nombreProd, fabricante, familia);
                    productos.add(producto);
                }
            }

            // Create a Farmacia object with the retrieved data
            Farmacia farmacia = new Farmacia(nombre, id, direccion, propietarios, farmaceuticos, productos);

            // Add the Farmacia object to the global ArrayList
            Farmacias.add(farmacia);
        }

        cursor.close();
        System.out.println("All Farmacias loaded into the global ArrayList successfully!");

    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (mongoClient != null) {
            mongoClient.close();
            System.out.println("Disconnected from MongoDB");
        }
    }
}


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTmaster;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButton_Cliente;
    private javax.swing.JButton jButton_Crear;
    private javax.swing.JButton jButton_CrearF;
    private javax.swing.JButton jButton_CrearF1;
    private javax.swing.JButton jButton_CrearF2;
    private javax.swing.JButton jButton_CrearF3;
    private javax.swing.JButton jButton_CrearF4;
    private javax.swing.JButton jButton_Farmacia;
    private javax.swing.JButton jButton_Laboratorio;
    private javax.swing.JButton jButton_idborrar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JDialog jDialog_ComprarCliente;
    private javax.swing.JDialog jDialog_CrearCliente;
    private javax.swing.JDialog jDialog_CrearFarmacia;
    private javax.swing.JDialog jDialog_CrearLaboratorio;
    private javax.swing.JDialog jDialog_Farmacia;
    private javax.swing.JDialog jDialog_Laboratorio;
    private javax.swing.JDialog jDialog_LogInCliente;
    private javax.swing.JDialog jDialog_LogInFarmacia;
    private javax.swing.JDialog jDialog_LogInLaboratorio;
    private javax.swing.JDialog jDialog_Master;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelmodid;
    private javax.swing.JLabel jLabelmodnom;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelbotones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextFieldContacto;
    private javax.swing.JTextField jTextField_ContactoL;
    private javax.swing.JTextField jTextField_CostoP;
    private javax.swing.JTextField jTextField_DirF1;
    private javax.swing.JTextField jTextField_DirL;
    private javax.swing.JTextField jTextField_FamiliaP;
    private javax.swing.JTextField jTextField_ID;
    private javax.swing.JTextField jTextField_IDF;
    private javax.swing.JTextField jTextField_IDL;
    private javax.swing.JTextField jTextField_IDLogInC;
    private javax.swing.JTextField jTextField_IDLogInF;
    private javax.swing.JTextField jTextField_IDLogInL;
    private javax.swing.JTextField jTextField_IDP;
    private javax.swing.JTextField jTextField_Nombre;
    private javax.swing.JTextField jTextField_NombreF;
    private javax.swing.JTextField jTextField_NombreL;
    private javax.swing.JTextField jTextField_NombreLogInC;
    private javax.swing.JTextField jTextField_NombreLogInF;
    private javax.swing.JTextField jTextField_NombreLogInL;
    private javax.swing.JTextField jTextField_NombreP;
    private javax.swing.JTextField jTextField_UnidadesP;
    private javax.swing.JTextField jTextField_idborrar;
    private javax.swing.JTextField jTextFielddireccion;
    private javax.swing.JTextField jTextFieldidmodi;
    private javax.swing.JTextField jTextFieldmodid;
    private javax.swing.JTextField jTextFieldmodnom;
    private javax.swing.JButton jbuttonmodi;
    // End of variables declaration//GEN-END:variables
 Conexion conectar = new Conexion("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
    ArrayList<Cliente> Clientes = new ArrayList<>();
    ArrayList<Pedido> ped = new ArrayList();
    ArrayList<Farmacia> Farmacias = new ArrayList<>();
    ArrayList<Laboratorio> Laboratorios= new ArrayList<>();
    ArrayList<Producto> prod = new ArrayList();
    ArrayList<Propietario> pro = new ArrayList();
    ArrayList<Farmaceutico> far = new ArrayList();
    private static MongoClient mongoClient;
    private static MongoDatabase db;
    private static MongoCollection<Document> collection;
    
    public void deleteMaster(){
        try{
            mongoClient = MongoClients.create("mongodb+srv://user:farmacias2024@cluster0.rjh38.mongodb.net/");
            db = mongoClient.getDatabase("Farmacia");
            collection = db.getCollection(jLabelMarca.getText());
            System.out.println("Connected to MongoDB");
            int id=Integer.parseInt(jTextField_idborrar.getText());
            Document filtro = new Document("id", id);
            long count = collection.countDocuments(filtro);
            if (count == 0) {
                JOptionPane.showMessageDialog(null,"No se encontró "+ jLabelMarca.getText()+" con el ID especificado.");
            } else {
                collection.deleteOne(filtro);
                JOptionPane.showMessageDialog(null, "Se ha eliminado el "+ jLabelMarca.getText()+" "+jTextField_idborrar.getText());
            }
            jTextField_idborrar.setText("");
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (mongoClient != null) {
                mongoClient.close();
                System.out.println("Disconnected from MongoDB");
            }
        }
    }
     
    
}
